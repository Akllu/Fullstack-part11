{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","reducers/blogReducer.js","services/login.js","reducers/userReducer.js","reducers/store.js","hooks/index.js","components/BlogForm.js","components/Togglable.js","views/BlogsView.js","views/UsersView.js","views/AuthorView.js","components/Notification.js","components/LoginForm.js","components/Navbar.js","components/Blog.js","App.js","index.js"],"names":["notificationSlice","createSlice","name","initialState","reducers","setNotification","state","action","payload","message","type","actions","timeoutID","addNotification","notification","time","dispatch","clearTimeout","undefined","setTimeout","baseUrl","token","create","newObject","config","headers","Authorization","axios","post","response","data","update","put","id","remove","blogId","delete","methods","getAll","get","then","setToken","newToken","blogSlice","setBlogs","sort","a","b","likes","addBlog","push","addLike","blogToChange","find","changedBlog","map","blog","deleteBlog","filter","login","credentials","userSlice","setUser","store","configureStore","reducer","notificationReducer","blogs","blogReducer","user","userReducer","useField","useState","value","setValue","input","onChange","event","target","resetField","BlogForm","toggle","title","author","url","useDispatch","onSubmit","e","preventDefault","newBlog","blogService","placeholder","Container","styled","div","Button","button","Togglable","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","displayName","Header","h1","SingleBlogLink","Link","Blogs","blogFormRef","useRef","useSelector","current","to","Table","table","AuthorLink","Loading","Users","users","u","length","SubHeader","h3","UnorderedList","ul","Author","match","useMatch","params","SuccessMessage","ErrorMessage","Notification","className","LoginForm","username","password","loginService","window","localStorage","setItem","JSON","stringify","loginUser","NavbarContainer","LinkContainer","NavLink","UserInfo","Navbar","removeItem","LikeSection","LikeButton","DeleteButton","Blog","comment","likeBlog","likedBlog","votedBlog","voteBlog","confirm","removedBlog","removeBlog","href","res","catch","err","console","error","comments","index","App","setUsers","useEffect","loggedUserJSON","getItem","parse","path","element","AuthorView","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8012f2e.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst notificationSlice = createSlice({\r\n  name: 'notification',\r\n  initialState: null,\r\n  reducers: {\r\n    setNotification(state, action) {\r\n      if (action.payload === null) return null\r\n\r\n      return {\r\n        message: action.payload.message,\r\n        type: action.payload.type,\r\n      }\r\n    },\r\n  },\r\n})\r\n\r\nexport const { setNotification } = notificationSlice.actions\r\n\r\nlet timeoutID = null\r\n\r\nexport const addNotification = (notification, time) => {\r\n  return dispatch => {\r\n    dispatch(setNotification(notification))\r\n\r\n    if (timeoutID) {\r\n      clearTimeout(timeoutID)\r\n    }\r\n\r\n    time = time === undefined ? 5 : time\r\n\r\n    timeoutID = setTimeout(() => {\r\n      dispatch(setNotification(null))\r\n    }, time * 1000)\r\n  }\r\n}\r\n\r\nexport default notificationSlice.reducer\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `Bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.put(\r\n    `${baseUrl}/${newObject.id}`,\r\n    newObject,\r\n    config\r\n  )\r\n\r\n  return response.data\r\n}\r\n\r\nconst remove = async blogId => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${blogId}`, config)\r\n  return response.data\r\n}\r\n\r\nconst methods = { getAll, create, update, remove, setToken }\r\nexport default methods\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport blogService from '../services/blogs'\r\n\r\nconst blogSlice = createSlice({\r\n  name: 'blogs',\r\n  initialState: [],\r\n  reducers: {\r\n    setBlogs(state, action) {\r\n      return action.payload.sort((a, b) => (a.likes < b.likes ? 1 : -1))\r\n    },\r\n    addBlog(state, action) {\r\n      state.push(action.payload)\r\n    },\r\n    addLike(state, action) {\r\n      const id = action.payload.id\r\n      const blogToChange = state.find(b => b.id === id)\r\n      const changedBlog = {\r\n        ...blogToChange,\r\n        likes: blogToChange.likes + 1,\r\n      }\r\n      return state.map(blog => (blog.id !== id ? blog : changedBlog))\r\n    },\r\n    deleteBlog(state, action) {\r\n      return state.filter(blog => blog.id !== action.payload.id)\r\n    },\r\n  },\r\n})\r\n\r\nexport const { setBlogs, addBlog, addLike, deleteBlog } = blogSlice.actions\r\n\r\nexport const initializeBlogs = () => {\r\n  return async dispatch => {\r\n    const blogs = await blogService.getAll()\r\n    dispatch(setBlogs(blogs))\r\n  }\r\n}\r\n\r\nexport const createBlog = blog => {\r\n  return async dispatch => {\r\n    const newBlog = await blogService.create(blog)\r\n    dispatch(addBlog(newBlog))\r\n  }\r\n}\r\n\r\nexport const voteBlog = blog => {\r\n  return async dispatch => {\r\n    const votedBlog = await blogService.update(blog)\r\n    dispatch(addLike(votedBlog))\r\n  }\r\n}\r\n\r\nexport const removeBlog = blog => {\r\n  return async dispatch => {\r\n    const removedBlog = await blogService.remove(blog.id)\r\n    dispatch(deleteBlog(removedBlog))\r\n  }\r\n}\r\n\r\nexport default blogSlice.reducer\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nconst methods = { login }\r\nexport default methods\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { addNotification } from './notificationReducer'\r\nimport loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: null,\r\n  reducers: {\r\n    setUser(state, action) {\r\n      return action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { setUser } = userSlice.actions\r\n\r\nexport const loginUser = (username, password) => {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await loginService.login({ username, password })\r\n      window.localStorage.setItem('loggedUser', JSON.stringify(user))\r\n      blogService.setToken(user.token)\r\n      dispatch(setUser(user))\r\n      dispatch(\r\n        addNotification({ message: `Welcome ${user.name}!`, type: 'success' })\r\n      )\r\n    } catch (exception) {\r\n      dispatch(\r\n        addNotification({\r\n          message: 'Wrong username or password!',\r\n          type: 'error',\r\n        })\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport const logOut = () => {\r\n  return dispatch => {\r\n    window.localStorage.removeItem('loggedUser')\r\n    blogService.setToken(null)\r\n    dispatch(addNotification({ message: 'You logged out!', type: 'success' }))\r\n    dispatch(setUser(null))\r\n  }\r\n}\r\n\r\nexport default userSlice.reducer\r\n","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport notificationReducer from './notificationReducer'\r\nimport blogReducer from './blogReducer'\r\nimport userReducer from './userReducer'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    notification: notificationReducer,\r\n    blogs: blogReducer,\r\n    user: userReducer,\r\n  },\r\n})\r\n\r\nexport default store\r\n","import { useState } from 'react'\r\n\r\nexport const useField = type => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const resetField = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return {\r\n    input: {\r\n      type,\r\n      value,\r\n      onChange,\r\n    },\r\n    resetField,\r\n  }\r\n}\r\n","import React from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addNotification } from '../reducers/notificationReducer'\r\nimport { createBlog } from '../reducers/blogReducer'\r\nimport { useField } from '../hooks'\r\n\r\nconst BlogForm = ({ toggle }) => {\r\n  const title = useField('title')\r\n  const author = useField('author')\r\n  const url = useField('url')\r\n  const likes = useField('likes')\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    const newBlog = {\r\n      title: title.input.value,\r\n      author: author.input.value,\r\n      url: url.input.value,\r\n      likes: likes.input.value,\r\n    }\r\n    dispatch(createBlog(newBlog))\r\n    dispatch(\r\n      addNotification({\r\n        message: `A new blog ${title.input.value} by ${author.input.value} added!`,\r\n        type: 'success',\r\n      })\r\n    )\r\n    toggle()\r\n    title.resetField()\r\n    author.resetField()\r\n    url.resetField()\r\n    likes.resetField()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create a new blog</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          Title:\r\n          <input {...title.input} placeholder=\"Enter a title\" />\r\n        </div>\r\n        <div>\r\n          Author:\r\n          <input {...author.input} placeholder=\"Enter a author\" />\r\n        </div>\r\n        <div>\r\n          URL:\r\n          <input {...url.input} placeholder=\"Enter a URL\" />\r\n        </div>\r\n        <div>\r\n          Likes:\r\n          <input {...likes.input} placeholder=\"Enter likes\" type=\"number\" />\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n// BlogForm.propTypes = {\r\n//   createBlog: PropTypes.func.isRequired,\r\n// }\r\n\r\nexport default BlogForm\r\n","import { useState, useImperativeHandle, forwardRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst Button = styled.button`\r\n  border-radius: 50px;\r\n  background: rgb(0, 0, 0);\r\n  padding: 10px 22px;\r\n  color: white;\r\n  font-size: 15px;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  margin: 15px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: white;\r\n    color: black;\r\n  }\r\n`\r\n\r\nconst Togglable = forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility,\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Container>\r\n      <div style={hideWhenVisible}>\r\n        <Button onClick={toggleVisibility}>{props.buttonLabel}</Button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <Button onClick={toggleVisibility}>Cancel</Button>\r\n      </div>\r\n    </Container>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired,\r\n}\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable\r\n","import React, { useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport BlogForm from '../components/BlogForm'\r\nimport Togglable from '../components/Togglable'\r\n\r\nconst Header = styled.h1`\r\n  text-align: center;\r\n`\r\n\r\nconst SingleBlogLink = styled(Link)`\r\n  display: flex;\r\n  align-self: center;\r\n  color: black;\r\n  text-decoration: none;\r\n  font-size: 24px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    text-decoration: underline;\r\n  }\r\n`\r\n\r\nconst Blogs = () => {\r\n  const blogFormRef = useRef()\r\n  const blogs = useSelector(state => state.blogs)\r\n\r\n  return (\r\n    <>\r\n      <Header>Blogs</Header>\r\n      <Togglable buttonLabel=\"Create a new blog\" ref={blogFormRef}>\r\n        <BlogForm toggle={() => blogFormRef.current.toggleVisibility()} />\r\n      </Togglable>\r\n      {blogs.map(blog => (\r\n        <SingleBlogLink to={`/blogs/${blog.id}`} key={blog.id}>\r\n          {blog.title}\r\n        </SingleBlogLink>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Blogs\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = styled.h1`\r\n  text-align: center;\r\n`\r\n\r\nconst Table = styled.table`\r\n  color: black;\r\n  text-align: center;\r\n  font-size: 24px;\r\n`\r\n\r\nconst AuthorLink = styled(Link)`\r\n  color: black;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    text-decoration: underline;\r\n  }\r\n`\r\n\r\nconst Loading = styled.div`\r\n  text-align: center;\r\n  font-size: 30px;\r\n`\r\n\r\nconst Users = ({ users }) => {\r\n  return (\r\n    <>\r\n      {users === null ? (\r\n        <Loading>Loading...</Loading>\r\n      ) : (\r\n        <>\r\n          <Header>Users</Header>\r\n          <Table>\r\n            <tbody>\r\n              <tr>\r\n                <td></td>\r\n                <td>\r\n                  <b>blogs created</b>\r\n                </td>\r\n              </tr>\r\n              {users.map(u => (\r\n                <tr key={u.id}>\r\n                  <td>\r\n                    <AuthorLink to={`/users/${u.id}`}>{u.name}</AuthorLink>\r\n                  </td>\r\n                  <td>{u.blogs.length}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useMatch } from 'react-router-dom'\r\n\r\nconst Header = styled.h1`\r\n  text-align: center;\r\n`\r\n\r\nconst SubHeader = styled.h3`\r\n  text-align: center;\r\n`\r\n\r\nconst UnorderedList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst Author = ({ users }) => {\r\n  if (!users) return null\r\n\r\n  const match = useMatch('/users/:id')\r\n  const user = match ? users.find(u => u.id === match.params.id) : null\r\n\r\n  return (\r\n    <>\r\n      <Header>{user.name}</Header>\r\n      <SubHeader>Added blogs</SubHeader>\r\n      <UnorderedList>\r\n        {user.blogs.map(b => (\r\n          <li key={b.id}>{b.title}</li>\r\n        ))}\r\n      </UnorderedList>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Author\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst SuccessMessage = styled.div`\r\n  font-size: 18px;\r\n  background-color: lightgray;\r\n  color: green;\r\n  border: 3px solid green;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n`\r\n\r\nconst ErrorMessage = styled.div`\r\n  font-size: 18px;\r\n  background-color: lightgray;\r\n  color: red;\r\n  border: 3px solid red;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n`\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notification)\r\n  if (notification === null) return null\r\n\r\n  return notification.type === 'success' ? (\r\n    <SuccessMessage>{notification.message}</SuccessMessage>\r\n  ) : (\r\n    <ErrorMessage className=\"error\">{notification.message}</ErrorMessage>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginUser } from '../reducers/userReducer'\r\nimport { useField } from '../hooks'\r\n\r\nconst LoginForm = () => {\r\n  const username = useField('username')\r\n  const password = useField('password')\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogin = e => {\r\n    e.preventDefault()\r\n    dispatch(loginUser(username.input.value, password.input.value))\r\n    username.resetField()\r\n    password.resetField()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          Username\r\n          <input id=\"username-input\" {...username.input} />\r\n        </div>\r\n        <div>\r\n          Password\r\n          <input id=\"password-input\" {...password.input} />\r\n        </div>\r\n        <button id=\"login-button\" type=\"submit\">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n// LoginForm.propTypes = {\r\n//   handleLogin: PropTypes.func.isRequired,\r\n//   setUsername: PropTypes.func.isRequired,\r\n//   setPassword: PropTypes.func.isRequired,\r\n//   username: PropTypes.string.isRequired,\r\n//   password: PropTypes.string.isRequired,\r\n// }\r\n\r\nexport default LoginForm\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { logOut } from '../reducers/userReducer'\r\n\r\nconst NavbarContainer = styled.div`\r\n  display: flex;\r\n  position: sticky;\r\n  background: rgb(123, 247, 159);\r\n  height: 80px;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 16px;\r\n  top: 0;\r\n  z-index: 1;\r\n`\r\n\r\nconst LinkContainer = styled.div`\r\n  display: flex;\r\n  margin-left: 15px;\r\n`\r\n\r\nconst NavLink = styled(Link)`\r\n  display: flex;\r\n  color: rgb(35, 35, 35);\r\n  align-items: center;\r\n  padding: 0 16px;\r\n  cursor: pointer;\r\n  font-family: Verdana, Geneva, sans-serif;\r\n  letter-spacing: 1px;\r\n  font-variant: small-caps;\r\n  font-style: italic;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    color: black;\r\n    font-size: 120%;\r\n  }\r\n`\r\n\r\nconst UserInfo = styled.div`\r\n  padding: 10px;\r\n`\r\n\r\nconst Button = styled.button`\r\n  border-radius: 50px;\r\n  background: rgb(0, 0, 0);\r\n  padding: 10px 22px;\r\n  color: white;\r\n  font-size: 15px;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  margin-left: 15px;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: white;\r\n    color: black;\r\n  }\r\n`\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.user)\r\n\r\n  return (\r\n    <NavbarContainer>\r\n      <LinkContainer>\r\n        <NavLink to=\"/blogs\">Blogs</NavLink>\r\n        <NavLink to=\"/users\">Users</NavLink>\r\n      </LinkContainer>\r\n      <UserInfo>\r\n        {user.name} logged in\r\n        <Button onClick={() => dispatch(logOut())}>Logout</Button>\r\n      </UserInfo>\r\n    </NavbarContainer>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { voteBlog, removeBlog, setBlogs } from '../reducers/blogReducer'\r\nimport { useMatch } from 'react-router-dom'\r\nimport { useField } from '../hooks'\r\nimport axios from 'axios'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 20px;\r\n`\r\n\r\nconst Link = styled.a``\r\n\r\nconst LikeSection = styled.div`\r\n  padding: 10px;\r\n`\r\n\r\nconst LikeButton = styled.button`\r\n  background: rgb(20, 142, 240);\r\n  border-radius: 5;\r\n  margin-left: 15px;\r\n  padding: 5px 15px;\r\n  border-radius: 10px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst DeleteButton = styled.button`\r\n  background: rgb(220, 42, 20);\r\n  border-radius: 5;\r\n  margin-top: 15px;\r\n  padding: 5px 15px;\r\n  border-radius: 10px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst Blog = () => {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.user)\r\n  const blogs = useSelector(state => state.blogs)\r\n  const comment = useField('comment')\r\n\r\n  const match = useMatch('/blogs/:id')\r\n  const blog = match ? blogs.find(b => b.id === match.params.id) : null\r\n\r\n  if (!blog) return null\r\n\r\n  const likeBlog = blog => {\r\n    const likedBlog = {\r\n      ...blog,\r\n      likes: blog.likes + 1,\r\n      user: blog.user.id,\r\n    }\r\n    dispatch(voteBlog(likedBlog))\r\n  }\r\n\r\n  const deleteBlog = blog => {\r\n    const confirm = window.confirm(\r\n      `Remove blog ${blog.title} by ${blog.author}?`\r\n    )\r\n    if (confirm) {\r\n      dispatch(removeBlog(blog))\r\n    }\r\n  }\r\n\r\n  const addComment = e => {\r\n    e.preventDefault()\r\n    axios\r\n      .post(`/api/blogs/${blog.id}/comments`, { comment: comment.input.value })\r\n      .then(res => {\r\n        dispatch(setBlogs(blogs.map(b => (b.id !== blog.id ? b : res.data))))\r\n      })\r\n      .catch(err => console.error(err))\r\n\r\n    comment.resetField()\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h1>{blog.title}</h1>\r\n      <Link href={blog.url}>{blog.url}</Link>\r\n      <LikeSection>\r\n        Likes {blog.likes}\r\n        <LikeButton onClick={() => likeBlog(blog)}>Like</LikeButton>\r\n      </LikeSection>\r\n      {`Added by ${blog.author}`}\r\n      {blog.user.username === user.username && (\r\n        <DeleteButton onClick={() => deleteBlog(blog)}>Remove</DeleteButton>\r\n      )}\r\n      <h3>Comments</h3>\r\n      <form onSubmit={addComment}>\r\n        <div>\r\n          <input {...comment.input} placeholder=\"Leave a comment\" />\r\n        </div>\r\n        <button type=\"submit\">Add comment</button>\r\n      </form>\r\n      <ul>\r\n        {blog.comments.map((comment, index) => (\r\n          <li key={index}>{comment}</li>\r\n        ))}\r\n      </ul>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { initializeBlogs } from './reducers/blogReducer'\r\nimport { setUser } from './reducers/userReducer'\r\nimport styled from 'styled-components'\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport BlogView from './views/BlogsView'\r\nimport UserView from './views/UsersView'\r\nimport AuthorView from './views/AuthorView'\r\n\r\nimport Notification from './components/Notification'\r\nimport LoginForm from './components/LoginForm'\r\nimport Navbar from './components/Navbar'\r\nimport Blog from './components/Blog'\r\n\r\nimport blogService from './services/blogs'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: rgb(46, 213, 115);\r\n  height: 100vh;\r\n`\r\n\r\nconst App = () => {\r\n  const [users, setUsers] = useState(null)\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.user)\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/users').then(response => setUsers(response.data))\r\n\r\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      blogService.setToken(user.token)\r\n      dispatch(setUser(user))\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Container>\r\n      <Notification />\r\n      {user === null ? (\r\n        <LoginForm />\r\n      ) : (\r\n        <>\r\n          <Navbar />\r\n          <Routes>\r\n            <Route path=\"/\" element={<div></div>} />\r\n            <Route path=\"/blogs\" element={<BlogView />} />\r\n            <Route path=\"/blogs/:id\" element={<Blog />} />\r\n            <Route path=\"/users\" element={<UserView users={users} />} />\r\n            <Route path=\"/users/:id\" element={<AuthorView users={users} />} />\r\n          </Routes>\r\n        </>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport store from './reducers/store'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}